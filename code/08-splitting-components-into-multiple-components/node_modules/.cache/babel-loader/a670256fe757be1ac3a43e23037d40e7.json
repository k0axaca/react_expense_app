{"ast":null,"code":"var _jsxFileName = \"/Users/kristinakraft/Documents/udemy_course/react-complete-guide-code/code/08-splitting-components-into-multiple-components/src/components/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport './Expenses.css';\nimport Card from './Card';\nimport ExpensesFilter from './ExpensesFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  const expenseList = props.expenses.map(expense => {\n    console.log( /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 21\n    }, this));\n  });\n  const [filteredYear, setFilteredYear] = useState({\n    expenseList\n  });\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear); // why do filteredYear and selectedYear have different values?    // \n  };\n\n  const filteredExpenses = props.expenses.filter(expense => {\n    return expense.date.getFullYear() === parseInt(filteredYear);\n  }); // make a function with the unfiltered expenses, and set that as the default value for the expenses variable\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), filteredExpenses.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No expenses found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this) : filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: expense.title,\n        amount: expense.amount,\n        date: expense.date\n      }, expense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Expenses, \"w6TzwWv6WIjB0v0Nu8MvPmUQqpU=\");\n\n_c = Expenses;\n;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/Users/kristinakraft/Documents/udemy_course/react-complete-guide-code/code/08-splitting-components-into-multiple-components/src/components/Expenses.js"],"names":["useState","ExpenseItem","Card","ExpensesFilter","Expenses","props","expenseList","expenses","map","expense","console","log","title","amount","date","id","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","filter","getFullYear","parseInt","length"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,SAASC,QAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAEtB,QAAMC,WAAW,GAAGD,KAAK,CAACE,QAAN,CAAeC,GAAf,CAAmBC,OAAO,IAAI;AAE9CC,IAAAA,OAAO,CAACC,GAAR,eAAY,QAAC,WAAD;AAA8B,MAAA,KAAK,EAAEF,OAAO,CAACG,KAA7C;AAAoD,MAAA,MAAM,EAAEH,OAAO,CAACI,MAApE;AAA4E,MAAA,IAAI,EAAEJ,OAAO,CAACK;AAA1F,OAAkBL,OAAO,CAACM,EAA1B;AAAA;AAAA;AAAA;AAAA,YAAZ;AACH,GAHmB,CAApB;AAIA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC;AAACM,IAAAA;AAAD,GAAD,CAAhD;;AAGA,QAAMY,mBAAmB,GAAGC,YAAY,IAAI;AACxCF,IAAAA,eAAe,CAACE,YAAD,CAAf,CADwC,CAExC;AACH,GAHD;;AAKD,QAAMC,gBAAgB,GAAGf,KAAK,CAACE,QAAN,CAAec,MAAf,CAAsBZ,OAAO,IAAI;AACrD,WAAOA,OAAO,CAACK,IAAR,CAAaQ,WAAb,OAA+BC,QAAQ,CAACP,YAAD,CAA9C;AACH,GAFuB,CAAzB,CAduB,CAoBtB;;AAGA,sBACI;AAAA,2BAEI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BAEI,QAAC,cAAD;AAAgB,QAAA,QAAQ,EAAEA,YAA1B;AAAwC,QAAA,cAAc,EAAEE;AAAxD;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGKE,gBAAgB,CAACI,MAAjB,KAA4B,CAA5B,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,GAEIJ,gBAAgB,CAACZ,GAAjB,CAAsBC,OAAD,iBACtB,QAAC,WAAD;AAEI,QAAA,KAAK,EAAEA,OAAO,CAACG,KAFnB;AAGI,QAAA,MAAM,EAAEH,OAAO,CAACI,MAHpB;AAII,QAAA,IAAI,EAAEJ,OAAO,CAACK;AAJlB,SACSL,OAAO,CAACM,EADjB;AAAA;AAAA;AAAA;AAAA,cADC,CALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GA3CQX,Q;;KAAAA,Q;AA2CR;AAED,eAAeA,QAAf","sourcesContent":["import { useState } from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport './Expenses.css';\nimport Card from './Card';\nimport ExpensesFilter from './ExpensesFilter';\n\nfunction Expenses (props) {\n\n    const expenseList = props.expenses.map(expense => {\n        \n        console.log(<ExpenseItem key={expense.id} title={expense.title} amount={expense.amount} date={expense.date} />);\n    });\n    const [filteredYear, setFilteredYear] = useState({expenseList});\n    \n    \n    const filterChangeHandler = selectedYear => {\n        setFilteredYear(selectedYear);\n        // why do filteredYear and selectedYear have different values?    // \n    };\n\n   const filteredExpenses = props.expenses.filter(expense => {\n        return expense.date.getFullYear() === parseInt(filteredYear);\n    });\n\n    \n\n    // make a function with the unfiltered expenses, and set that as the default value for the expenses variable\n\n\n    return (\n        <div>\n            \n            <Card className='expenses'>\n                {/* using selected here is called 'double binding' or 'two-way binding'*/}\n                <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler}/>\n                {filteredExpenses.length === 0 ? (\n                    <p>No expenses found.</p>\n                ) : (filteredExpenses.map((expense) => (\n                    <ExpenseItem \n                        key={expense.id}\n                        title={expense.title}\n                        amount={expense.amount}\n                        date={expense.date}\n                    />\n                )))}\n\n            </Card>\n        </div>\n    );\n};\n\nexport default Expenses;"]},"metadata":{},"sourceType":"module"}