{"ast":null,"code":"var _jsxFileName = \"/Users/kristinakraft/Documents/udemy_course/react-complete-guide-code/code/08-splitting-components-into-multiple-components/src/components/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport './Expenses.css';\nimport Card from './Card';\nimport ExpensesFilter from './ExpensesFilter';\nimport ExpenseChart from './ExpensesChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState('All Expenses');\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear); // why do filteredYear and selectedYear have different values? \n  };\n\n  const filteredExpenses = props.expenses.filter(expense => {\n    if (filteredYear === 'All Expenses') {\n      return true;\n    } else {\n      return expense.date.getFullYear() === parseInt(filteredYear);\n    }\n  });\n  const expenseList = filteredExpenses.map(expense => {\n    return /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  }); // make a function with the unfiltered expenses, and set that as the default value for the expenses variable\n  // then, make a function with the filtered expenses, and set that as the value for the expenses variable\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), filteredExpenses.length === 0 || props.expenses.length === 0 ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No expenses found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this) : expenseList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Expenses, \"V6zaETRFGWKEs1+zFbY17imIpao=\");\n\n_c = Expenses;\n;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/Users/kristinakraft/Documents/udemy_course/react-complete-guide-code/code/08-splitting-components-into-multiple-components/src/components/Expenses.js"],"names":["useState","ExpenseItem","Card","ExpensesFilter","ExpenseChart","Expenses","props","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","expenses","filter","expense","date","getFullYear","parseInt","expenseList","map","title","amount","id","length"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACrB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,cAAD,CAAhD;;AAEA,QAAMS,mBAAmB,GAAGC,YAAY,IAAI;AACxCF,IAAAA,eAAe,CAACE,YAAD,CAAf,CADwC,CAExC;AACH,GAHD;;AAIA,QAAMC,gBAAgB,GAAGL,KAAK,CAACM,QAAN,CAAeC,MAAf,CAAsBC,OAAO,IAAI;AACtD,QAAIP,YAAY,KAAK,cAArB,EAAqC;AACjC,aAAO,IAAP;AACH,KAFD,MAEO;AACH,aAAOO,OAAO,CAACC,IAAR,CAAaC,WAAb,OAA+BC,QAAQ,CAACV,YAAD,CAA9C;AACH;AACJ,GANwB,CAAzB;AAOA,QAAMW,WAAW,GAAGP,gBAAgB,CAACQ,GAAjB,CAAqBL,OAAO,IAAI;AAChD,wBAAO,QAAC,WAAD;AAA8B,MAAA,KAAK,EAAEA,OAAO,CAACM,KAA7C;AAAoD,MAAA,MAAM,EAAEN,OAAO,CAACO,MAApE;AAA4E,MAAA,IAAI,EAAEP,OAAO,CAACC;AAA1F,OAAkBD,OAAO,CAACQ,EAA1B;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFmB,CAApB,CAdqB,CAiBrB;AACA;;AACA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BAEI,QAAC,cAAD;AAAgB,QAAA,QAAQ,EAAEf,YAA1B;AAAwC,QAAA,cAAc,EAAEE;AAAxD;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGKE,gBAAgB,CAACY,MAAjB,KAA4B,CAA5B,IAAiCjB,KAAK,CAACM,QAAN,CAAeW,MAAf,KAA0B,CAA3D,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,GAEGL,WALR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GA9BQb,Q;;KAAAA,Q;AA8BR;AAED,eAAeA,QAAf","sourcesContent":["import { useState } from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport './Expenses.css';\nimport Card from './Card';\nimport ExpensesFilter from './ExpensesFilter';\nimport ExpenseChart from './ExpensesChart';\n\nfunction Expenses(props) {\n    const [filteredYear, setFilteredYear] = useState('All Expenses');\n\n    const filterChangeHandler = selectedYear => {\n        setFilteredYear(selectedYear);\n        // why do filteredYear and selectedYear have different values? \n    }\n    const filteredExpenses = props.expenses.filter(expense => {\n        if (filteredYear === 'All Expenses') {\n            return true;\n        } else {\n            return expense.date.getFullYear() === parseInt(filteredYear);\n        }\n    });\n    const expenseList = filteredExpenses.map(expense => {\n        return <ExpenseItem key={expense.id} title={expense.title} amount={expense.amount} date={expense.date} />\n    });\n    // make a function with the unfiltered expenses, and set that as the default value for the expenses variable\n    // then, make a function with the filtered expenses, and set that as the value for the expenses variable\n    return (\n        <div>\n            <Card className='expenses'>\n                {/* using selected here is called 'double binding' or 'two-way binding'*/}\n                <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\n                {filteredExpenses.length === 0 || props.expenses.length === 0 ? (\n                    <h2>No expenses found.</h2>\n                ) : expenseList}\n            </Card>\n        </div>\n    );\n};\n\nexport default Expenses;"]},"metadata":{},"sourceType":"module"}